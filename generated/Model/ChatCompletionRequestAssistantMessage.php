<?php

declare(strict_types=1);

namespace Sourceability\OpenAIClient\Generated\Model;

use ArrayObject;

class ChatCompletionRequestAssistantMessage extends ArrayObject
{
    protected array $initialized = [];

    /**
     * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
     */
    protected ?string $content = null;

    /**
     * The role of the messages author, in this case `assistant`.
     */
    protected string $role = 'assistant';

    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    protected ?string $name = null;

    /**
     * The tool calls generated by the model, such as function calls.
     *
     * @var ChatCompletionMessageToolCall[]
     */
    protected ?array $toolCalls = null;

    /**
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     *
     * @deprecated
     */
    protected ?ChatCompletionRequestAssistantMessageFunctionCall $functionCall = null;

    /**
     * @param string|null $content The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
     * @param string $name An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     * @param ChatCompletionMessageToolCall[] $toolCalls The tool calls generated by the model, such as function calls.
     * @param ChatCompletionRequestAssistantMessageFunctionCall $functionCall Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     * @param string $role The role of the messages author, in this case `assistant`.
     */
    public function __construct($content = null, $name = null, $toolCalls = null, $functionCall = null, $role = null)
    {
        if ($content !== null) {
            $this->setContent($content);
        }
        if ($name !== null) {
            $this->setName($name);
        }
        if ($toolCalls !== null) {
            $this->setToolCalls($toolCalls);
        }
        if ($functionCall !== null) {
            $this->setFunctionCall($functionCall);
        }
        if ($role !== null) {
            $this->setRole($role);
        }
    }

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }

    /**
     * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
     */
    public function getContent(): ?string
    {
        return $this->content;
    }

    /**
     * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
     */
    public function setContent(?string $content): self
    {
        $this->initialized['content'] = true;
        $this->content = $content;
        return $this;
    }

    /**
     * The role of the messages author, in this case `assistant`.
     */
    public function getRole(): string
    {
        return $this->role;
    }

    /**
     * The role of the messages author, in this case `assistant`.
     */
    public function setRole(string $role): self
    {
        $this->initialized['role'] = true;
        $this->role = $role;
        return $this;
    }

    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;
        return $this;
    }

    /**
     * The tool calls generated by the model, such as function calls.
     *
     * @return ChatCompletionMessageToolCall[]
     */
    public function getToolCalls(): array
    {
        return $this->toolCalls;
    }

    /**
     * The tool calls generated by the model, such as function calls.
     *
     * @param ChatCompletionMessageToolCall[] $toolCalls
     */
    public function setToolCalls(array $toolCalls): self
    {
        $this->initialized['toolCalls'] = true;
        $this->toolCalls = $toolCalls;
        return $this;
    }

    /**
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     *
     * @deprecated
     */
    public function getFunctionCall(): ChatCompletionRequestAssistantMessageFunctionCall
    {
        return $this->functionCall;
    }

    /**
     * Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
     *
     * @deprecated
     */
    public function setFunctionCall(ChatCompletionRequestAssistantMessageFunctionCall $functionCall): self
    {
        $this->initialized['functionCall'] = true;
        $this->functionCall = $functionCall;
        return $this;
    }
}
